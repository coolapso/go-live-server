name: Release
on: 
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  tests:
    uses: coolapso/go-live-server/.github/workflows/test.yaml@main

  release:
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.semrel.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.23'
      - uses: go-semantic-release/action@v1
        id: semrel
        with:
          allow-initial-development-versions: true
          custom-arguments: '--commit-analyzer-opt patch_release_rules=fix,ref,build'
          hooks: goreleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUR_KEY: ${{ secrets.AUR_KEY }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      - name: Set up QEMU
        if: ${{ steps.semrel.outputs.version != '' }}
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        if: ${{ steps.semrel.outputs.version != '' }}
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        if: ${{ steps.semrel.outputs.version != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ steps.semrel.outputs.version != '' }}
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: coolapso/go-live-server:latest,coolapso/go-live-server:${{ env.DOCKER_TAG }}
          build-args:
            VERSION=${{ steps.semrel.outputs.version }}

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: coolapso/go-live-server

